/* tslint:disable */
/* eslint-disable */
//  This file was automatically generated and should not be edited.

export type CreateUserInput = {
  id?: string | null,
  username: string,
  email: string,
  phoneNumber?: string | null,
  ownElectricVehicle: boolean,
  _version?: number | null,
};

export type ModelUserConditionInput = {
  username?: ModelStringInput | null,
  email?: ModelStringInput | null,
  phoneNumber?: ModelStringInput | null,
  ownElectricVehicle?: ModelBooleanInput | null,
  and?: Array< ModelUserConditionInput | null > | null,
  or?: Array< ModelUserConditionInput | null > | null,
  not?: ModelUserConditionInput | null,
};

export type ModelStringInput = {
  ne?: string | null,
  eq?: string | null,
  le?: string | null,
  lt?: string | null,
  ge?: string | null,
  gt?: string | null,
  contains?: string | null,
  notContains?: string | null,
  between?: Array< string | null > | null,
  beginsWith?: string | null,
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
  size?: ModelSizeInput | null,
};

export enum ModelAttributeTypes {
  binary = "binary",
  binarySet = "binarySet",
  bool = "bool",
  list = "list",
  map = "map",
  number = "number",
  numberSet = "numberSet",
  string = "string",
  stringSet = "stringSet",
  _null = "_null",
}


export type ModelSizeInput = {
  ne?: number | null,
  eq?: number | null,
  le?: number | null,
  lt?: number | null,
  ge?: number | null,
  gt?: number | null,
  between?: Array< number | null > | null,
};

export type ModelBooleanInput = {
  ne?: boolean | null,
  eq?: boolean | null,
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
};

export type UpdateUserInput = {
  id: string,
  username?: string | null,
  email?: string | null,
  phoneNumber?: string | null,
  ownElectricVehicle?: boolean | null,
  _version?: number | null,
};

export type DeleteUserInput = {
  id?: string | null,
  _version?: number | null,
};

export type CreateHomeOwnerInput = {
  id?: string | null,
  homeID: string,
  homeOwnerID: string,
  _version?: number | null,
};

export type ModelHomeOwnerConditionInput = {
  homeID?: ModelIDInput | null,
  homeOwnerID?: ModelIDInput | null,
  and?: Array< ModelHomeOwnerConditionInput | null > | null,
  or?: Array< ModelHomeOwnerConditionInput | null > | null,
  not?: ModelHomeOwnerConditionInput | null,
};

export type ModelIDInput = {
  ne?: string | null,
  eq?: string | null,
  le?: string | null,
  lt?: string | null,
  ge?: string | null,
  gt?: string | null,
  contains?: string | null,
  notContains?: string | null,
  between?: Array< string | null > | null,
  beginsWith?: string | null,
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
  size?: ModelSizeInput | null,
};

export enum HomeType {
  SINGLE_FAMILY = "SINGLE_FAMILY",
  DUPLEX = "DUPLEX",
  TOWNHOUSE = "TOWNHOUSE",
  APARTMENT_CONDO = "APARTMENT_CONDO",
}


export enum HeatingFuelType {
  GAS = "GAS",
  ELECTRIC = "ELECTRIC",
  PROPANE = "PROPANE",
  OTHER = "OTHER",
}


export enum WaterHeaterFuelType {
  GAS = "GAS",
  ELECTRIC = "ELECTRIC",
  OTHER = "OTHER",
}


export type UpdateHomeOwnerInput = {
  id: string,
  homeID?: string | null,
  homeOwnerID?: string | null,
  _version?: number | null,
};

export type DeleteHomeOwnerInput = {
  id?: string | null,
  _version?: number | null,
};

export type CreateHomeInput = {
  id?: string | null,
  homeType: HomeType,
  addressLine1: string,
  addressLine2?: string | null,
  city: string,
  addressState: string,
  country: string,
  zipcode: string,
  yearBuilt: number,
  electricProvider: string,
  gasProvider: string,
  outDoorArea: number,
  livableArea: number,
  bedroomCount: number,
  bathroomCount: number,
  heatingFuelType: HeatingFuelType,
  heaterAge: number,
  waterHeaterFuelType: WaterHeaterFuelType,
  waterHeaterAge: number,
  hasAirConditioner: boolean,
  hasPool: boolean,
  hasHotTub: boolean,
  annualElectricalEnergyUsage: number,
  annualGasPropaneEnergyUsage: number,
  annualWaterUsage: number,
  _version?: number | null,
};

export type ModelHomeConditionInput = {
  homeType?: ModelHomeTypeInput | null,
  addressLine1?: ModelStringInput | null,
  addressLine2?: ModelStringInput | null,
  city?: ModelStringInput | null,
  addressState?: ModelStringInput | null,
  country?: ModelStringInput | null,
  zipcode?: ModelStringInput | null,
  yearBuilt?: ModelIntInput | null,
  electricProvider?: ModelStringInput | null,
  gasProvider?: ModelStringInput | null,
  outDoorArea?: ModelFloatInput | null,
  livableArea?: ModelFloatInput | null,
  bedroomCount?: ModelIntInput | null,
  bathroomCount?: ModelIntInput | null,
  heatingFuelType?: ModelHeatingFuelTypeInput | null,
  heaterAge?: ModelIntInput | null,
  waterHeaterFuelType?: ModelWaterHeaterFuelTypeInput | null,
  waterHeaterAge?: ModelIntInput | null,
  hasAirConditioner?: ModelBooleanInput | null,
  hasPool?: ModelBooleanInput | null,
  hasHotTub?: ModelBooleanInput | null,
  annualElectricalEnergyUsage?: ModelFloatInput | null,
  annualGasPropaneEnergyUsage?: ModelFloatInput | null,
  annualWaterUsage?: ModelFloatInput | null,
  and?: Array< ModelHomeConditionInput | null > | null,
  or?: Array< ModelHomeConditionInput | null > | null,
  not?: ModelHomeConditionInput | null,
};

export type ModelHomeTypeInput = {
  eq?: HomeType | null,
  ne?: HomeType | null,
};

export type ModelIntInput = {
  ne?: number | null,
  eq?: number | null,
  le?: number | null,
  lt?: number | null,
  ge?: number | null,
  gt?: number | null,
  between?: Array< number | null > | null,
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
};

export type ModelFloatInput = {
  ne?: number | null,
  eq?: number | null,
  le?: number | null,
  lt?: number | null,
  ge?: number | null,
  gt?: number | null,
  between?: Array< number | null > | null,
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
};

export type ModelHeatingFuelTypeInput = {
  eq?: HeatingFuelType | null,
  ne?: HeatingFuelType | null,
};

export type ModelWaterHeaterFuelTypeInput = {
  eq?: WaterHeaterFuelType | null,
  ne?: WaterHeaterFuelType | null,
};

export type UpdateHomeInput = {
  id: string,
  homeType?: HomeType | null,
  addressLine1?: string | null,
  addressLine2?: string | null,
  city?: string | null,
  addressState?: string | null,
  country?: string | null,
  zipcode?: string | null,
  yearBuilt?: number | null,
  electricProvider?: string | null,
  gasProvider?: string | null,
  outDoorArea?: number | null,
  livableArea?: number | null,
  bedroomCount?: number | null,
  bathroomCount?: number | null,
  heatingFuelType?: HeatingFuelType | null,
  heaterAge?: number | null,
  waterHeaterFuelType?: WaterHeaterFuelType | null,
  waterHeaterAge?: number | null,
  hasAirConditioner?: boolean | null,
  hasPool?: boolean | null,
  hasHotTub?: boolean | null,
  annualElectricalEnergyUsage?: number | null,
  annualGasPropaneEnergyUsage?: number | null,
  annualWaterUsage?: number | null,
  _version?: number | null,
};

export type DeleteHomeInput = {
  id?: string | null,
  _version?: number | null,
};

export type CreateQuestionInput = {
  id?: string | null,
  text: string,
  tags?: Array< Tag | null > | null,
  options?: Array< string | null > | null,
  metadata?: string | null,
  _version?: number | null,
};

export enum Tag {
  ENERGY = "ENERGY",
  RESILIENCY = "RESILIENCY",
  HEALTH = "HEALTH",
  MATERIALS = "MATERIALS",
  EMBODIED_CARBON = "EMBODIED_CARBON",
  WATER = "WATER",
}


export type ModelQuestionConditionInput = {
  text?: ModelStringInput | null,
  tags?: ModelTagListInput | null,
  options?: ModelStringInput | null,
  metadata?: ModelStringInput | null,
  and?: Array< ModelQuestionConditionInput | null > | null,
  or?: Array< ModelQuestionConditionInput | null > | null,
  not?: ModelQuestionConditionInput | null,
};

export type ModelTagListInput = {
  eq?: Array< Tag | null > | null,
  ne?: Array< Tag | null > | null,
  contains?: Tag | null,
  notContains?: Tag | null,
};

export type UpdateQuestionInput = {
  id: string,
  text?: string | null,
  tags?: Array< Tag | null > | null,
  options?: Array< string | null > | null,
  metadata?: string | null,
  _version?: number | null,
};

export type DeleteQuestionInput = {
  id?: string | null,
  _version?: number | null,
};

export type CreateResponseInput = {
  id?: string | null,
  homeID: string,
  questionID: string,
  answers?: Array< string | null > | null,
  _version?: number | null,
};

export type ModelResponseConditionInput = {
  homeID?: ModelIDInput | null,
  questionID?: ModelIDInput | null,
  answers?: ModelStringInput | null,
  and?: Array< ModelResponseConditionInput | null > | null,
  or?: Array< ModelResponseConditionInput | null > | null,
  not?: ModelResponseConditionInput | null,
};

export type UpdateResponseInput = {
  id: string,
  homeID?: string | null,
  questionID?: string | null,
  answers?: Array< string | null > | null,
  _version?: number | null,
};

export type DeleteResponseInput = {
  id?: string | null,
  _version?: number | null,
};

export type CreateBadgeInput = {
  id?: string | null,
  name: string,
  type: Tag,
  criteria: number,
  logoName: string,
  _version?: number | null,
};

export type ModelBadgeConditionInput = {
  name?: ModelStringInput | null,
  type?: ModelTagInput | null,
  criteria?: ModelIntInput | null,
  logoName?: ModelStringInput | null,
  and?: Array< ModelBadgeConditionInput | null > | null,
  or?: Array< ModelBadgeConditionInput | null > | null,
  not?: ModelBadgeConditionInput | null,
};

export type ModelTagInput = {
  eq?: Tag | null,
  ne?: Tag | null,
};

export type UpdateBadgeInput = {
  id: string,
  name?: string | null,
  type?: Tag | null,
  criteria?: number | null,
  logoName?: string | null,
  _version?: number | null,
};

export type DeleteBadgeInput = {
  id?: string | null,
  _version?: number | null,
};

export type CreateHomeBadgeInput = {
  id?: string | null,
  homeID: string,
  badgeID: string,
  _version?: number | null,
};

export type ModelHomeBadgeConditionInput = {
  homeID?: ModelIDInput | null,
  badgeID?: ModelIDInput | null,
  and?: Array< ModelHomeBadgeConditionInput | null > | null,
  or?: Array< ModelHomeBadgeConditionInput | null > | null,
  not?: ModelHomeBadgeConditionInput | null,
};

export type UpdateHomeBadgeInput = {
  id: string,
  homeID?: string | null,
  badgeID?: string | null,
  _version?: number | null,
};

export type DeleteHomeBadgeInput = {
  id?: string | null,
  _version?: number | null,
};

export type ModelUserFilterInput = {
  id?: ModelIDInput | null,
  username?: ModelStringInput | null,
  email?: ModelStringInput | null,
  phoneNumber?: ModelStringInput | null,
  ownElectricVehicle?: ModelBooleanInput | null,
  and?: Array< ModelUserFilterInput | null > | null,
  or?: Array< ModelUserFilterInput | null > | null,
  not?: ModelUserFilterInput | null,
};

export type ModelHomeOwnerFilterInput = {
  id?: ModelIDInput | null,
  homeID?: ModelIDInput | null,
  homeOwnerID?: ModelIDInput | null,
  and?: Array< ModelHomeOwnerFilterInput | null > | null,
  or?: Array< ModelHomeOwnerFilterInput | null > | null,
  not?: ModelHomeOwnerFilterInput | null,
};

export type ModelHomeFilterInput = {
  id?: ModelIDInput | null,
  homeType?: ModelHomeTypeInput | null,
  addressLine1?: ModelStringInput | null,
  addressLine2?: ModelStringInput | null,
  city?: ModelStringInput | null,
  addressState?: ModelStringInput | null,
  country?: ModelStringInput | null,
  zipcode?: ModelStringInput | null,
  yearBuilt?: ModelIntInput | null,
  electricProvider?: ModelStringInput | null,
  gasProvider?: ModelStringInput | null,
  outDoorArea?: ModelFloatInput | null,
  livableArea?: ModelFloatInput | null,
  bedroomCount?: ModelIntInput | null,
  bathroomCount?: ModelIntInput | null,
  heatingFuelType?: ModelHeatingFuelTypeInput | null,
  heaterAge?: ModelIntInput | null,
  waterHeaterFuelType?: ModelWaterHeaterFuelTypeInput | null,
  waterHeaterAge?: ModelIntInput | null,
  hasAirConditioner?: ModelBooleanInput | null,
  hasPool?: ModelBooleanInput | null,
  hasHotTub?: ModelBooleanInput | null,
  annualElectricalEnergyUsage?: ModelFloatInput | null,
  annualGasPropaneEnergyUsage?: ModelFloatInput | null,
  annualWaterUsage?: ModelFloatInput | null,
  and?: Array< ModelHomeFilterInput | null > | null,
  or?: Array< ModelHomeFilterInput | null > | null,
  not?: ModelHomeFilterInput | null,
};

export type ModelQuestionFilterInput = {
  id?: ModelIDInput | null,
  text?: ModelStringInput | null,
  tags?: ModelTagListInput | null,
  options?: ModelStringInput | null,
  metadata?: ModelStringInput | null,
  and?: Array< ModelQuestionFilterInput | null > | null,
  or?: Array< ModelQuestionFilterInput | null > | null,
  not?: ModelQuestionFilterInput | null,
};

export type ModelResponseFilterInput = {
  id?: ModelIDInput | null,
  homeID?: ModelIDInput | null,
  questionID?: ModelIDInput | null,
  answers?: ModelStringInput | null,
  and?: Array< ModelResponseFilterInput | null > | null,
  or?: Array< ModelResponseFilterInput | null > | null,
  not?: ModelResponseFilterInput | null,
};

export type ModelBadgeFilterInput = {
  id?: ModelIDInput | null,
  name?: ModelStringInput | null,
  type?: ModelTagInput | null,
  criteria?: ModelIntInput | null,
  logoName?: ModelStringInput | null,
  and?: Array< ModelBadgeFilterInput | null > | null,
  or?: Array< ModelBadgeFilterInput | null > | null,
  not?: ModelBadgeFilterInput | null,
};

export type ModelHomeBadgeFilterInput = {
  id?: ModelIDInput | null,
  homeID?: ModelIDInput | null,
  badgeID?: ModelIDInput | null,
  and?: Array< ModelHomeBadgeFilterInput | null > | null,
  or?: Array< ModelHomeBadgeFilterInput | null > | null,
  not?: ModelHomeBadgeFilterInput | null,
};

export type CreateUserMutationVariables = {
  input: CreateUserInput,
  condition?: ModelUserConditionInput | null,
};

export type CreateUserMutation = {
  createUser:  {
    __typename: "User",
    id: string,
    username: string,
    email: string,
    phoneNumber: string | null,
    ownElectricVehicle: boolean,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type UpdateUserMutationVariables = {
  input: UpdateUserInput,
  condition?: ModelUserConditionInput | null,
};

export type UpdateUserMutation = {
  updateUser:  {
    __typename: "User",
    id: string,
    username: string,
    email: string,
    phoneNumber: string | null,
    ownElectricVehicle: boolean,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type DeleteUserMutationVariables = {
  input: DeleteUserInput,
  condition?: ModelUserConditionInput | null,
};

export type DeleteUserMutation = {
  deleteUser:  {
    __typename: "User",
    id: string,
    username: string,
    email: string,
    phoneNumber: string | null,
    ownElectricVehicle: boolean,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type CreateHomeOwnerMutationVariables = {
  input: CreateHomeOwnerInput,
  condition?: ModelHomeOwnerConditionInput | null,
};

export type CreateHomeOwnerMutation = {
  createHomeOwner:  {
    __typename: "HomeOwner",
    id: string,
    homeID: string,
    homeOwnerID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwner:  {
      __typename: "User",
      id: string,
      username: string,
      email: string,
      phoneNumber: string | null,
      ownElectricVehicle: boolean,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
  } | null,
};

export type UpdateHomeOwnerMutationVariables = {
  input: UpdateHomeOwnerInput,
  condition?: ModelHomeOwnerConditionInput | null,
};

export type UpdateHomeOwnerMutation = {
  updateHomeOwner:  {
    __typename: "HomeOwner",
    id: string,
    homeID: string,
    homeOwnerID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwner:  {
      __typename: "User",
      id: string,
      username: string,
      email: string,
      phoneNumber: string | null,
      ownElectricVehicle: boolean,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
  } | null,
};

export type DeleteHomeOwnerMutationVariables = {
  input: DeleteHomeOwnerInput,
  condition?: ModelHomeOwnerConditionInput | null,
};

export type DeleteHomeOwnerMutation = {
  deleteHomeOwner:  {
    __typename: "HomeOwner",
    id: string,
    homeID: string,
    homeOwnerID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwner:  {
      __typename: "User",
      id: string,
      username: string,
      email: string,
      phoneNumber: string | null,
      ownElectricVehicle: boolean,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
  } | null,
};

export type CreateHomeMutationVariables = {
  input: CreateHomeInput,
  condition?: ModelHomeConditionInput | null,
};

export type CreateHomeMutation = {
  createHome:  {
    __typename: "Home",
    id: string,
    homeType: HomeType,
    addressLine1: string,
    addressLine2: string | null,
    city: string,
    addressState: string,
    country: string,
    zipcode: string,
    yearBuilt: number,
    electricProvider: string,
    gasProvider: string,
    outDoorArea: number,
    livableArea: number,
    bedroomCount: number,
    bathroomCount: number,
    heatingFuelType: HeatingFuelType,
    heaterAge: number,
    waterHeaterFuelType: WaterHeaterFuelType,
    waterHeaterAge: number,
    hasAirConditioner: boolean,
    hasPool: boolean,
    hasHotTub: boolean,
    annualElectricalEnergyUsage: number,
    annualGasPropaneEnergyUsage: number,
    annualWaterUsage: number,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwners:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    owner: string | null,
    homeowners: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    badges:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type UpdateHomeMutationVariables = {
  input: UpdateHomeInput,
  condition?: ModelHomeConditionInput | null,
};

export type UpdateHomeMutation = {
  updateHome:  {
    __typename: "Home",
    id: string,
    homeType: HomeType,
    addressLine1: string,
    addressLine2: string | null,
    city: string,
    addressState: string,
    country: string,
    zipcode: string,
    yearBuilt: number,
    electricProvider: string,
    gasProvider: string,
    outDoorArea: number,
    livableArea: number,
    bedroomCount: number,
    bathroomCount: number,
    heatingFuelType: HeatingFuelType,
    heaterAge: number,
    waterHeaterFuelType: WaterHeaterFuelType,
    waterHeaterAge: number,
    hasAirConditioner: boolean,
    hasPool: boolean,
    hasHotTub: boolean,
    annualElectricalEnergyUsage: number,
    annualGasPropaneEnergyUsage: number,
    annualWaterUsage: number,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwners:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    owner: string | null,
    homeowners: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    badges:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type DeleteHomeMutationVariables = {
  input: DeleteHomeInput,
  condition?: ModelHomeConditionInput | null,
};

export type DeleteHomeMutation = {
  deleteHome:  {
    __typename: "Home",
    id: string,
    homeType: HomeType,
    addressLine1: string,
    addressLine2: string | null,
    city: string,
    addressState: string,
    country: string,
    zipcode: string,
    yearBuilt: number,
    electricProvider: string,
    gasProvider: string,
    outDoorArea: number,
    livableArea: number,
    bedroomCount: number,
    bathroomCount: number,
    heatingFuelType: HeatingFuelType,
    heaterAge: number,
    waterHeaterFuelType: WaterHeaterFuelType,
    waterHeaterAge: number,
    hasAirConditioner: boolean,
    hasPool: boolean,
    hasHotTub: boolean,
    annualElectricalEnergyUsage: number,
    annualGasPropaneEnergyUsage: number,
    annualWaterUsage: number,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwners:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    owner: string | null,
    homeowners: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    badges:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type CreateQuestionMutationVariables = {
  input: CreateQuestionInput,
  condition?: ModelQuestionConditionInput | null,
};

export type CreateQuestionMutation = {
  createQuestion:  {
    __typename: "Question",
    id: string,
    text: string,
    tags: Array< Tag | null > | null,
    options: Array< string | null > | null,
    metadata: string | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type UpdateQuestionMutationVariables = {
  input: UpdateQuestionInput,
  condition?: ModelQuestionConditionInput | null,
};

export type UpdateQuestionMutation = {
  updateQuestion:  {
    __typename: "Question",
    id: string,
    text: string,
    tags: Array< Tag | null > | null,
    options: Array< string | null > | null,
    metadata: string | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type DeleteQuestionMutationVariables = {
  input: DeleteQuestionInput,
  condition?: ModelQuestionConditionInput | null,
};

export type DeleteQuestionMutation = {
  deleteQuestion:  {
    __typename: "Question",
    id: string,
    text: string,
    tags: Array< Tag | null > | null,
    options: Array< string | null > | null,
    metadata: string | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type CreateResponseMutationVariables = {
  input: CreateResponseInput,
  condition?: ModelResponseConditionInput | null,
};

export type CreateResponseMutation = {
  createResponse:  {
    __typename: "Response",
    id: string,
    homeID: string,
    questionID: string,
    answers: Array< string | null > | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    question:  {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    owner: string | null,
  } | null,
};

export type UpdateResponseMutationVariables = {
  input: UpdateResponseInput,
  condition?: ModelResponseConditionInput | null,
};

export type UpdateResponseMutation = {
  updateResponse:  {
    __typename: "Response",
    id: string,
    homeID: string,
    questionID: string,
    answers: Array< string | null > | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    question:  {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    owner: string | null,
  } | null,
};

export type DeleteResponseMutationVariables = {
  input: DeleteResponseInput,
  condition?: ModelResponseConditionInput | null,
};

export type DeleteResponseMutation = {
  deleteResponse:  {
    __typename: "Response",
    id: string,
    homeID: string,
    questionID: string,
    answers: Array< string | null > | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    question:  {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    owner: string | null,
  } | null,
};

export type CreateBadgeMutationVariables = {
  input: CreateBadgeInput,
  condition?: ModelBadgeConditionInput | null,
};

export type CreateBadgeMutation = {
  createBadge:  {
    __typename: "Badge",
    id: string,
    name: string,
    type: Tag,
    criteria: number,
    logoName: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type UpdateBadgeMutationVariables = {
  input: UpdateBadgeInput,
  condition?: ModelBadgeConditionInput | null,
};

export type UpdateBadgeMutation = {
  updateBadge:  {
    __typename: "Badge",
    id: string,
    name: string,
    type: Tag,
    criteria: number,
    logoName: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type DeleteBadgeMutationVariables = {
  input: DeleteBadgeInput,
  condition?: ModelBadgeConditionInput | null,
};

export type DeleteBadgeMutation = {
  deleteBadge:  {
    __typename: "Badge",
    id: string,
    name: string,
    type: Tag,
    criteria: number,
    logoName: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type CreateHomeBadgeMutationVariables = {
  input: CreateHomeBadgeInput,
  condition?: ModelHomeBadgeConditionInput | null,
};

export type CreateHomeBadgeMutation = {
  createHomeBadge:  {
    __typename: "HomeBadge",
    id: string,
    homeID: string,
    badgeID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    badge:  {
      __typename: "Badge",
      id: string,
      name: string,
      type: Tag,
      criteria: number,
      logoName: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
  } | null,
};

export type UpdateHomeBadgeMutationVariables = {
  input: UpdateHomeBadgeInput,
  condition?: ModelHomeBadgeConditionInput | null,
};

export type UpdateHomeBadgeMutation = {
  updateHomeBadge:  {
    __typename: "HomeBadge",
    id: string,
    homeID: string,
    badgeID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    badge:  {
      __typename: "Badge",
      id: string,
      name: string,
      type: Tag,
      criteria: number,
      logoName: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
  } | null,
};

export type DeleteHomeBadgeMutationVariables = {
  input: DeleteHomeBadgeInput,
  condition?: ModelHomeBadgeConditionInput | null,
};

export type DeleteHomeBadgeMutation = {
  deleteHomeBadge:  {
    __typename: "HomeBadge",
    id: string,
    homeID: string,
    badgeID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    badge:  {
      __typename: "Badge",
      id: string,
      name: string,
      type: Tag,
      criteria: number,
      logoName: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
  } | null,
};

export type ListUsersQueryVariables = {
  filter?: ModelUserFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListUsersQuery = {
  listUsers:  {
    __typename: "ModelUserConnection",
    items:  Array< {
      __typename: "User",
      id: string,
      username: string,
      email: string,
      phoneNumber: string | null,
      ownElectricVehicle: boolean,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type GetUserQueryVariables = {
  id: string,
};

export type GetUserQuery = {
  getUser:  {
    __typename: "User",
    id: string,
    username: string,
    email: string,
    phoneNumber: string | null,
    ownElectricVehicle: boolean,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type SyncUsersQueryVariables = {
  filter?: ModelUserFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  lastSync?: number | null,
};

export type SyncUsersQuery = {
  syncUsers:  {
    __typename: "ModelUserConnection",
    items:  Array< {
      __typename: "User",
      id: string,
      username: string,
      email: string,
      phoneNumber: string | null,
      ownElectricVehicle: boolean,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type SyncHomeOwnersQueryVariables = {
  filter?: ModelHomeOwnerFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  lastSync?: number | null,
};

export type SyncHomeOwnersQuery = {
  syncHomeOwners:  {
    __typename: "ModelHomeOwnerConnection",
    items:  Array< {
      __typename: "HomeOwner",
      id: string,
      homeID: string,
      homeOwnerID: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwner:  {
        __typename: "User",
        id: string,
        username: string,
        email: string,
        phoneNumber: string | null,
        ownElectricVehicle: boolean,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      },
      owner: string | null,
      home:  {
        __typename: "Home",
        id: string,
        homeType: HomeType,
        addressLine1: string,
        addressLine2: string | null,
        city: string,
        addressState: string,
        country: string,
        zipcode: string,
        yearBuilt: number,
        electricProvider: string,
        gasProvider: string,
        outDoorArea: number,
        livableArea: number,
        bedroomCount: number,
        bathroomCount: number,
        heatingFuelType: HeatingFuelType,
        heaterAge: number,
        waterHeaterFuelType: WaterHeaterFuelType,
        waterHeaterAge: number,
        hasAirConditioner: boolean,
        hasPool: boolean,
        hasHotTub: boolean,
        annualElectricalEnergyUsage: number,
        annualGasPropaneEnergyUsage: number,
        annualWaterUsage: number,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
        homeowners: string | null,
      },
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type ListHomesQueryVariables = {
  filter?: ModelHomeFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListHomesQuery = {
  listHomes:  {
    __typename: "ModelHomeConnection",
    items:  Array< {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type GetHomeQueryVariables = {
  id: string,
};

export type GetHomeQuery = {
  getHome:  {
    __typename: "Home",
    id: string,
    homeType: HomeType,
    addressLine1: string,
    addressLine2: string | null,
    city: string,
    addressState: string,
    country: string,
    zipcode: string,
    yearBuilt: number,
    electricProvider: string,
    gasProvider: string,
    outDoorArea: number,
    livableArea: number,
    bedroomCount: number,
    bathroomCount: number,
    heatingFuelType: HeatingFuelType,
    heaterAge: number,
    waterHeaterFuelType: WaterHeaterFuelType,
    waterHeaterAge: number,
    hasAirConditioner: boolean,
    hasPool: boolean,
    hasHotTub: boolean,
    annualElectricalEnergyUsage: number,
    annualGasPropaneEnergyUsage: number,
    annualWaterUsage: number,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwners:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    owner: string | null,
    homeowners: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    badges:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type SyncHomesQueryVariables = {
  filter?: ModelHomeFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  lastSync?: number | null,
};

export type SyncHomesQuery = {
  syncHomes:  {
    __typename: "ModelHomeConnection",
    items:  Array< {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type ListQuestionsQueryVariables = {
  filter?: ModelQuestionFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListQuestionsQuery = {
  listQuestions:  {
    __typename: "ModelQuestionConnection",
    items:  Array< {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type GetQuestionQueryVariables = {
  id: string,
};

export type GetQuestionQuery = {
  getQuestion:  {
    __typename: "Question",
    id: string,
    text: string,
    tags: Array< Tag | null > | null,
    options: Array< string | null > | null,
    metadata: string | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type SyncQuestionsQueryVariables = {
  filter?: ModelQuestionFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  lastSync?: number | null,
};

export type SyncQuestionsQuery = {
  syncQuestions:  {
    __typename: "ModelQuestionConnection",
    items:  Array< {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type GetResponseQueryVariables = {
  id: string,
};

export type GetResponseQuery = {
  getResponse:  {
    __typename: "Response",
    id: string,
    homeID: string,
    questionID: string,
    answers: Array< string | null > | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    question:  {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    owner: string | null,
  } | null,
};

export type ListResponsesQueryVariables = {
  filter?: ModelResponseFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListResponsesQuery = {
  listResponses:  {
    __typename: "ModelResponseConnection",
    items:  Array< {
      __typename: "Response",
      id: string,
      homeID: string,
      questionID: string,
      answers: Array< string | null > | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      home:  {
        __typename: "Home",
        id: string,
        homeType: HomeType,
        addressLine1: string,
        addressLine2: string | null,
        city: string,
        addressState: string,
        country: string,
        zipcode: string,
        yearBuilt: number,
        electricProvider: string,
        gasProvider: string,
        outDoorArea: number,
        livableArea: number,
        bedroomCount: number,
        bathroomCount: number,
        heatingFuelType: HeatingFuelType,
        heaterAge: number,
        waterHeaterFuelType: WaterHeaterFuelType,
        waterHeaterAge: number,
        hasAirConditioner: boolean,
        hasPool: boolean,
        hasHotTub: boolean,
        annualElectricalEnergyUsage: number,
        annualGasPropaneEnergyUsage: number,
        annualWaterUsage: number,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
        homeowners: string | null,
      } | null,
      question:  {
        __typename: "Question",
        id: string,
        text: string,
        tags: Array< Tag | null > | null,
        options: Array< string | null > | null,
        metadata: string | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null,
      owner: string | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type SyncResponsesQueryVariables = {
  filter?: ModelResponseFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  lastSync?: number | null,
};

export type SyncResponsesQuery = {
  syncResponses:  {
    __typename: "ModelResponseConnection",
    items:  Array< {
      __typename: "Response",
      id: string,
      homeID: string,
      questionID: string,
      answers: Array< string | null > | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      home:  {
        __typename: "Home",
        id: string,
        homeType: HomeType,
        addressLine1: string,
        addressLine2: string | null,
        city: string,
        addressState: string,
        country: string,
        zipcode: string,
        yearBuilt: number,
        electricProvider: string,
        gasProvider: string,
        outDoorArea: number,
        livableArea: number,
        bedroomCount: number,
        bathroomCount: number,
        heatingFuelType: HeatingFuelType,
        heaterAge: number,
        waterHeaterFuelType: WaterHeaterFuelType,
        waterHeaterAge: number,
        hasAirConditioner: boolean,
        hasPool: boolean,
        hasHotTub: boolean,
        annualElectricalEnergyUsage: number,
        annualGasPropaneEnergyUsage: number,
        annualWaterUsage: number,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
        homeowners: string | null,
      } | null,
      question:  {
        __typename: "Question",
        id: string,
        text: string,
        tags: Array< Tag | null > | null,
        options: Array< string | null > | null,
        metadata: string | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null,
      owner: string | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type ListBadgesQueryVariables = {
  filter?: ModelBadgeFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListBadgesQuery = {
  listBadges:  {
    __typename: "ModelBadgeConnection",
    items:  Array< {
      __typename: "Badge",
      id: string,
      name: string,
      type: Tag,
      criteria: number,
      logoName: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type GetBadgeQueryVariables = {
  id: string,
};

export type GetBadgeQuery = {
  getBadge:  {
    __typename: "Badge",
    id: string,
    name: string,
    type: Tag,
    criteria: number,
    logoName: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type SyncBadgesQueryVariables = {
  filter?: ModelBadgeFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  lastSync?: number | null,
};

export type SyncBadgesQuery = {
  syncBadges:  {
    __typename: "ModelBadgeConnection",
    items:  Array< {
      __typename: "Badge",
      id: string,
      name: string,
      type: Tag,
      criteria: number,
      logoName: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type SyncHomeBadgesQueryVariables = {
  filter?: ModelHomeBadgeFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  lastSync?: number | null,
};

export type SyncHomeBadgesQuery = {
  syncHomeBadges:  {
    __typename: "ModelHomeBadgeConnection",
    items:  Array< {
      __typename: "HomeBadge",
      id: string,
      homeID: string,
      badgeID: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      home:  {
        __typename: "Home",
        id: string,
        homeType: HomeType,
        addressLine1: string,
        addressLine2: string | null,
        city: string,
        addressState: string,
        country: string,
        zipcode: string,
        yearBuilt: number,
        electricProvider: string,
        gasProvider: string,
        outDoorArea: number,
        livableArea: number,
        bedroomCount: number,
        bathroomCount: number,
        heatingFuelType: HeatingFuelType,
        heaterAge: number,
        waterHeaterFuelType: WaterHeaterFuelType,
        waterHeaterAge: number,
        hasAirConditioner: boolean,
        hasPool: boolean,
        hasHotTub: boolean,
        annualElectricalEnergyUsage: number,
        annualGasPropaneEnergyUsage: number,
        annualWaterUsage: number,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
        homeowners: string | null,
      },
      badge:  {
        __typename: "Badge",
        id: string,
        name: string,
        type: Tag,
        criteria: number,
        logoName: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      },
      owner: string | null,
    } | null > | null,
    nextToken: string | null,
    startedAt: number | null,
  } | null,
};

export type OnCreateUserSubscriptionVariables = {
  owner?: string | null,
};

export type OnCreateUserSubscription = {
  onCreateUser:  {
    __typename: "User",
    id: string,
    username: string,
    email: string,
    phoneNumber: string | null,
    ownElectricVehicle: boolean,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnUpdateUserSubscriptionVariables = {
  owner?: string | null,
};

export type OnUpdateUserSubscription = {
  onUpdateUser:  {
    __typename: "User",
    id: string,
    username: string,
    email: string,
    phoneNumber: string | null,
    ownElectricVehicle: boolean,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnDeleteUserSubscriptionVariables = {
  owner?: string | null,
};

export type OnDeleteUserSubscription = {
  onDeleteUser:  {
    __typename: "User",
    id: string,
    username: string,
    email: string,
    phoneNumber: string | null,
    ownElectricVehicle: boolean,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnCreateHomeOwnerSubscriptionVariables = {
  owner?: string | null,
};

export type OnCreateHomeOwnerSubscription = {
  onCreateHomeOwner:  {
    __typename: "HomeOwner",
    id: string,
    homeID: string,
    homeOwnerID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwner:  {
      __typename: "User",
      id: string,
      username: string,
      email: string,
      phoneNumber: string | null,
      ownElectricVehicle: boolean,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
  } | null,
};

export type OnUpdateHomeOwnerSubscriptionVariables = {
  owner?: string | null,
};

export type OnUpdateHomeOwnerSubscription = {
  onUpdateHomeOwner:  {
    __typename: "HomeOwner",
    id: string,
    homeID: string,
    homeOwnerID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwner:  {
      __typename: "User",
      id: string,
      username: string,
      email: string,
      phoneNumber: string | null,
      ownElectricVehicle: boolean,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
  } | null,
};

export type OnDeleteHomeOwnerSubscriptionVariables = {
  owner?: string | null,
};

export type OnDeleteHomeOwnerSubscription = {
  onDeleteHomeOwner:  {
    __typename: "HomeOwner",
    id: string,
    homeID: string,
    homeOwnerID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwner:  {
      __typename: "User",
      id: string,
      username: string,
      email: string,
      phoneNumber: string | null,
      ownElectricVehicle: boolean,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
  } | null,
};

export type OnCreateHomeSubscriptionVariables = {
  owner?: string | null,
  homeowners?: string | null,
};

export type OnCreateHomeSubscription = {
  onCreateHome:  {
    __typename: "Home",
    id: string,
    homeType: HomeType,
    addressLine1: string,
    addressLine2: string | null,
    city: string,
    addressState: string,
    country: string,
    zipcode: string,
    yearBuilt: number,
    electricProvider: string,
    gasProvider: string,
    outDoorArea: number,
    livableArea: number,
    bedroomCount: number,
    bathroomCount: number,
    heatingFuelType: HeatingFuelType,
    heaterAge: number,
    waterHeaterFuelType: WaterHeaterFuelType,
    waterHeaterAge: number,
    hasAirConditioner: boolean,
    hasPool: boolean,
    hasHotTub: boolean,
    annualElectricalEnergyUsage: number,
    annualGasPropaneEnergyUsage: number,
    annualWaterUsage: number,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwners:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    owner: string | null,
    homeowners: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    badges:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnUpdateHomeSubscriptionVariables = {
  owner?: string | null,
  homeowners?: string | null,
};

export type OnUpdateHomeSubscription = {
  onUpdateHome:  {
    __typename: "Home",
    id: string,
    homeType: HomeType,
    addressLine1: string,
    addressLine2: string | null,
    city: string,
    addressState: string,
    country: string,
    zipcode: string,
    yearBuilt: number,
    electricProvider: string,
    gasProvider: string,
    outDoorArea: number,
    livableArea: number,
    bedroomCount: number,
    bathroomCount: number,
    heatingFuelType: HeatingFuelType,
    heaterAge: number,
    waterHeaterFuelType: WaterHeaterFuelType,
    waterHeaterAge: number,
    hasAirConditioner: boolean,
    hasPool: boolean,
    hasHotTub: boolean,
    annualElectricalEnergyUsage: number,
    annualGasPropaneEnergyUsage: number,
    annualWaterUsage: number,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwners:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    owner: string | null,
    homeowners: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    badges:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnDeleteHomeSubscriptionVariables = {
  owner?: string | null,
  homeowners?: string | null,
};

export type OnDeleteHomeSubscription = {
  onDeleteHome:  {
    __typename: "Home",
    id: string,
    homeType: HomeType,
    addressLine1: string,
    addressLine2: string | null,
    city: string,
    addressState: string,
    country: string,
    zipcode: string,
    yearBuilt: number,
    electricProvider: string,
    gasProvider: string,
    outDoorArea: number,
    livableArea: number,
    bedroomCount: number,
    bathroomCount: number,
    heatingFuelType: HeatingFuelType,
    heaterAge: number,
    waterHeaterFuelType: WaterHeaterFuelType,
    waterHeaterAge: number,
    hasAirConditioner: boolean,
    hasPool: boolean,
    hasHotTub: boolean,
    annualElectricalEnergyUsage: number,
    annualGasPropaneEnergyUsage: number,
    annualWaterUsage: number,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    homeOwners:  {
      __typename: "ModelHomeOwnerConnection",
      items:  Array< {
        __typename: "HomeOwner",
        id: string,
        homeID: string,
        homeOwnerID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    owner: string | null,
    homeowners: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
    badges:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnCreateQuestionSubscriptionVariables = {
  owner?: string | null,
};

export type OnCreateQuestionSubscription = {
  onCreateQuestion:  {
    __typename: "Question",
    id: string,
    text: string,
    tags: Array< Tag | null > | null,
    options: Array< string | null > | null,
    metadata: string | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnUpdateQuestionSubscriptionVariables = {
  owner?: string | null,
};

export type OnUpdateQuestionSubscription = {
  onUpdateQuestion:  {
    __typename: "Question",
    id: string,
    text: string,
    tags: Array< Tag | null > | null,
    options: Array< string | null > | null,
    metadata: string | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnDeleteQuestionSubscriptionVariables = {
  owner?: string | null,
};

export type OnDeleteQuestionSubscription = {
  onDeleteQuestion:  {
    __typename: "Question",
    id: string,
    text: string,
    tags: Array< Tag | null > | null,
    options: Array< string | null > | null,
    metadata: string | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    responses:  {
      __typename: "ModelResponseConnection",
      items:  Array< {
        __typename: "Response",
        id: string,
        homeID: string,
        questionID: string,
        answers: Array< string | null > | null,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnCreateResponseSubscriptionVariables = {
  owner?: string | null,
};

export type OnCreateResponseSubscription = {
  onCreateResponse:  {
    __typename: "Response",
    id: string,
    homeID: string,
    questionID: string,
    answers: Array< string | null > | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    question:  {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    owner: string | null,
  } | null,
};

export type OnUpdateResponseSubscriptionVariables = {
  owner?: string | null,
};

export type OnUpdateResponseSubscription = {
  onUpdateResponse:  {
    __typename: "Response",
    id: string,
    homeID: string,
    questionID: string,
    answers: Array< string | null > | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    question:  {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    owner: string | null,
  } | null,
};

export type OnDeleteResponseSubscriptionVariables = {
  owner?: string | null,
};

export type OnDeleteResponseSubscription = {
  onDeleteResponse:  {
    __typename: "Response",
    id: string,
    homeID: string,
    questionID: string,
    answers: Array< string | null > | null,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    question:  {
      __typename: "Question",
      id: string,
      text: string,
      tags: Array< Tag | null > | null,
      options: Array< string | null > | null,
      metadata: string | null,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    } | null,
    owner: string | null,
  } | null,
};

export type OnCreateBadgeSubscriptionVariables = {
  owner?: string | null,
};

export type OnCreateBadgeSubscription = {
  onCreateBadge:  {
    __typename: "Badge",
    id: string,
    name: string,
    type: Tag,
    criteria: number,
    logoName: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnUpdateBadgeSubscriptionVariables = {
  owner?: string | null,
};

export type OnUpdateBadgeSubscription = {
  onUpdateBadge:  {
    __typename: "Badge",
    id: string,
    name: string,
    type: Tag,
    criteria: number,
    logoName: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnDeleteBadgeSubscriptionVariables = {
  owner?: string | null,
};

export type OnDeleteBadgeSubscription = {
  onDeleteBadge:  {
    __typename: "Badge",
    id: string,
    name: string,
    type: Tag,
    criteria: number,
    logoName: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    owner: string | null,
    homes:  {
      __typename: "ModelHomeBadgeConnection",
      items:  Array< {
        __typename: "HomeBadge",
        id: string,
        homeID: string,
        badgeID: string,
        _version: number,
        _deleted: boolean | null,
        _lastChangedAt: number,
        createdAt: string,
        updatedAt: string,
        owner: string | null,
      } | null > | null,
      nextToken: string | null,
      startedAt: number | null,
    } | null,
  } | null,
};

export type OnCreateHomeBadgeSubscriptionVariables = {
  owner?: string | null,
};

export type OnCreateHomeBadgeSubscription = {
  onCreateHomeBadge:  {
    __typename: "HomeBadge",
    id: string,
    homeID: string,
    badgeID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    badge:  {
      __typename: "Badge",
      id: string,
      name: string,
      type: Tag,
      criteria: number,
      logoName: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
  } | null,
};

export type OnUpdateHomeBadgeSubscriptionVariables = {
  owner?: string | null,
};

export type OnUpdateHomeBadgeSubscription = {
  onUpdateHomeBadge:  {
    __typename: "HomeBadge",
    id: string,
    homeID: string,
    badgeID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    badge:  {
      __typename: "Badge",
      id: string,
      name: string,
      type: Tag,
      criteria: number,
      logoName: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
  } | null,
};

export type OnDeleteHomeBadgeSubscriptionVariables = {
  owner?: string | null,
};

export type OnDeleteHomeBadgeSubscription = {
  onDeleteHomeBadge:  {
    __typename: "HomeBadge",
    id: string,
    homeID: string,
    badgeID: string,
    _version: number,
    _deleted: boolean | null,
    _lastChangedAt: number,
    createdAt: string,
    updatedAt: string,
    home:  {
      __typename: "Home",
      id: string,
      homeType: HomeType,
      addressLine1: string,
      addressLine2: string | null,
      city: string,
      addressState: string,
      country: string,
      zipcode: string,
      yearBuilt: number,
      electricProvider: string,
      gasProvider: string,
      outDoorArea: number,
      livableArea: number,
      bedroomCount: number,
      bathroomCount: number,
      heatingFuelType: HeatingFuelType,
      heaterAge: number,
      waterHeaterFuelType: WaterHeaterFuelType,
      waterHeaterAge: number,
      hasAirConditioner: boolean,
      hasPool: boolean,
      hasHotTub: boolean,
      annualElectricalEnergyUsage: number,
      annualGasPropaneEnergyUsage: number,
      annualWaterUsage: number,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      homeOwners:  {
        __typename: "ModelHomeOwnerConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      owner: string | null,
      homeowners: string | null,
      responses:  {
        __typename: "ModelResponseConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
      badges:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    badge:  {
      __typename: "Badge",
      id: string,
      name: string,
      type: Tag,
      criteria: number,
      logoName: string,
      _version: number,
      _deleted: boolean | null,
      _lastChangedAt: number,
      createdAt: string,
      updatedAt: string,
      owner: string | null,
      homes:  {
        __typename: "ModelHomeBadgeConnection",
        nextToken: string | null,
        startedAt: number | null,
      } | null,
    },
    owner: string | null,
  } | null,
};
